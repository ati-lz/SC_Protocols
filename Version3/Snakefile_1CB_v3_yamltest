from os import listdir
import yaml

#Path to sample fastq files
fastq_path = '/project/devel/HCA/MDC_Berlin/1CellBio/re-demux/1CellBio_redemux_merged/'
human_gtf = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
human_STAR_genome= '/project/devel/alafzi/ref_genomes/human/STARgenome'
mouse_gtf = '/project/devel/alafzi/ref_genomes/mouse/mmu_gencode.vM17.primary_assembly.annotation.gtf'
mouse_STAR_genome= '/project/devel/alafzi/ref_genomes/mouse/STARgenome'
mixed_gtf = '/project/devel/alafzi/ref_genomes/mixed/hsap_mmus_can_combined_gtf.gtf'
mixed_STAR_genome= '/project/devel/alafzi/ref_genomes/mixed/STARgenome'

zUMI_path='/apps/ZUMIS/2.2'
bc_list2= '/project/devel/HCA/10XGenomics/10X_cellBCs_737K-august-2016.txt'
protocol= '1CB'

#Loading modules
#shell.executable("!/usr/bin/env bash")
shell.prefix("module unload gcc/latest; module load gcc/6.3.0; module load XZ/5.2.2; module load COREUTILS/8.21; module load CONDA/4.3.11_PYTHON3; module load java/latest; module load SAMTOOLS/1.6; module load BAMTOOLS/2.3.0 ; module load STAR/2.6.0c; module load R/3.5.0; module load hdf5/1.10.1; module load PIGZ/2.3.3; module load ZUMIS/2.2; ")

#Samples
sample_files = listdir(fastq_path)
SAMPLES = list(set(i.split("_")[2] for i in sample_files))
#SPECIES = ["human", "mouse", "mixed"]


rule all:
    input:
        expand("YAMLs/"+protocol+"_hsap_{sample}.yaml",sample=SAMPLES),
        expand("YAMLs/"+protocol+"_mmus_{sample}.yaml",sample=SAMPLES),
        expand("YAMLs/"+protocol+"_mixed_{sample}.yaml",sample=SAMPLES)

rule create_yaml:
    input:
         yaml = "pipeline_general.yaml"
    output:
        yamlOut_hsap="YAMLs/"+protocol+"_hsap_{sample}.yaml",
        yamlOut_mmus="YAMLs/"+protocol+"_mmus_{sample}.yaml",
        yamlOut_mixed="YAMLs/"+protocol+"_mixed_{sample}.yaml"
    run:
        #fname = input

        stream = open(input.yaml, 'r')
        data_hsap = yaml.load(stream)

        data_hsap['project'] = 'InDropsV2'
        data_hsap['sequence_files']['file1']['name'] = fastq_path+ 'SP021_024015_' + wildcards.sample +'_merged_R1.fastq.gz'
        data_hsap['sequence_files']['file1']['base_definition'][0] = 'cDNA(1-36)'
        #data_hsap['sequence_files']['file2']['name'] = fastq_path+ 'SP021_024015_' + wildcards.sample +'_merged_I1.fastq.gz'
        #data_hsap['sequence_files']['file2']['base_definition'][0] = 'BC(1-6)'
        data_hsap['sequence_files']['file2']['name'] = fastq_path+'SP021_024015_' + wildcards.sample +'_merged_R2.fastq.gz'
        data_hsap['sequence_files']['file2']['base_definition'][0] = 'BC(1-8,31-38)'
        data_hsap['sequence_files']['file2']['base_definition'][1] = 'UMI(39-44)'
        data_hsap['sequence_files']['file2']['correct_frameshift'] = 'GAGTGATTGCTTGTGACGCCTT'
        #data_hsap['num_threads'] = 8
        #data_hsap['make_stats'] = "yes"
        #data_hsap['which_Stage'] = 'Counting'
        #data_hsap['barcodes']['barcode_file'] = bc_list2
        data_hsap['barcodes']['barcode_num'] = 3000
        data_hsap['reference']['STAR_index'] = '/project/devel/alafzi/ref_genomes/human/STARgenome'
        data_hsap['reference']['GTF_file'] = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
        data_hsap['reference']['additional_STAR_params'] = '--limitOutSJcollapsed 4000000 --limitSjdbInsertNsj 4000000'
        data_hsap['out_dir'] = "/project/devel/alafzi/SC_Protocols/Version3/multigenome_1CB_V3/"+wildcards.sample+"_human"
        with open(output.yamlOut_hsap, 'w') as out_hsap:
            yaml.dump(data_hsap, out_hsap, default_flow_style=False)
        data_mmus = data_hsap
        data_mmus['reference']['STAR_index'] = '/project/devel/alafzi/ref_genomes/mouse/STARgenome'
        data_mmus['reference']['GTF_file'] = '/project/devel/alafzi/ref_genomes/mouse/mmu_gencode.vM17.primary_assembly.annotation.gtf'
        data_mmus['out_dir'] = "/project/devel/alafzi/SC_Protocols/Version3/multigenome_1CB_V3/"+wildcards.sample+"_mouse"
        with open(output.yamlOut_mmus, 'w') as out_mmus:
            yaml.dump(data_mmus, out_mmus, default_flow_style=False)
        data_mixed = data_hsap
        data_mixed['reference']['STAR_index'] = '/project/devel/alafzi/ref_genomes/mixed/STARgenome'
        data_mixed['reference']['GTF_file'] = '/project/devel/alafzi/ref_genomes/mixed/hsap_mmus_can_combined_gtf.gtf'
        data_mixed['out_dir'] = "/project/devel/alafzi/SC_Protocols/Version3/multigenome_1CB_V3/"+wildcards.sample+"_mixed"
        with open(output.yamlOut_mixed, 'w') as out_mixed:
            yaml.dump(data_mixed, out_mixed, default_flow_style=False)
