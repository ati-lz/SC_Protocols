from os import listdir
import yaml

#Path to sample fastq files
fastq_path = '/home/devel/alafzi/10X_cellRanger/SERRANO/fastq_all/'
human_gtf = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
human_STAR_genome= '/project/devel/alafzi/ref_genomes/human/STARgenome'
mouse_gtf = '/project/devel/alafzi/ref_genomes/mouse/mmu_gencode.vM17.primary_assembly.annotation.gtf'
mouse_STAR_genome= '/project/devel/alafzi/ref_genomes/mouse/STARgenome'
mixed_gtf = '/project/devel/alafzi/ref_genomes/mixed/hsap_mmus_can_combined_gtf.gtf'
mixed_STAR_genome= '/project/devel/alafzi/ref_genomes/mixed/STARgenome'

zUMI_path='/apps/ZUMIS/2.2'
bc_list2= '/project/devel/HCA/10XGenomics/10X_cellBCs_737K-august-2016.txt'
protocol= 'CNAG10X'

#Loading modules
#shell.executable("!/usr/bin/env bash")
shell.prefix("module unload gcc/latest; module load gcc/6.3.0; module load XZ/5.2.2; module load COREUTILS/8.21; module load CONDA/4.3.11_PYTHON3; module load java/latest; module load SAMTOOLS/1.6; module load BAMTOOLS/2.3.0 ; module load STAR/2.6.0c; module load R/3.5.0; module load hdf5/1.10.1; module load PIGZ/2.3.3; module load ZUMIS/2.2; ")

#Samples
sample_files = listdir(fastq_path)
SAMPLES = list(set(i.split("_")[0] for i in sample_files))


rule all:
    input:
         expand('CNAG10X_zUMI/{sample}_human/zUMIs_output/expression/'+protocol+'.dgecounts.rds', sample = SAMPLES)

rule create_yaml:
    input:
         yaml = "/project/devel/alafzi/SC_Protocols/Version3/pipeline_general.yaml"
    output:
        yamlOut_hsap="/home/devel/alafzi/10X_cellRanger/SERRANO/zUMI/YAMLs/"+protocol+"_hsap_{sample}.yaml"
    run:

        stream = open(input.yaml, 'r')
        data_hsap = yaml.load(stream)

        data_hsap['project'] = protocol
        data_hsap['sequence_files']['file1']['name'] = fastq_path+ wildcards.sample +'_S1_L001_R1_001.fastq.gz'
        data_hsap['sequence_files']['file1']['base_definition'][0] = 'BC(1-16)'
        data_hsap['sequence_files']['file1']['base_definition'][1] = 'UMI(17-26)'
        data_hsap['sequence_files']['file2']['name'] = fastq_path+ wildcards.sample +'_S1_L001_R2_001.fastq.gz'
        data_hsap['sequence_files']['file2']['base_definition'][0] = 'cDNA(1-91)'
        data_hsap['num_threads'] = 8
        #data_hsap['make_stats'] = "yes"
        #data_hsap['which_Stage'] = 'Counting'
        #data_hsap['barcodes']['barcode_file'] = bc_list2
        data_hsap['barcodes']['barcode_num'] = 5000
        data_hsap['reference']['STAR_index'] = '/project/devel/alafzi/ref_genomes/human/STARgenome'
        data_hsap['reference']['GTF_file'] = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
        data_hsap['reference']['additional_STAR_params'] = '--limitOutSJcollapsed 4000000 --limitSjdbInsertNsj 4000000'
        data_hsap['out_dir'] = "/home/devel/alafzi/10X_cellRanger/SERRANO/zUMI/"+wildcards.sample+"_human"
        with open(output.yamlOut_hsap, 'w') as out_hsap:
            yaml.dump(data_hsap, out_hsap, default_flow_style=False)

rule fix_yaml:
    input: 
        yamlin_hsap="/home/devel/alafzi/10X_cellRanger/SERRANO/zUMI/YAMLs/"+protocol+"_hsap_{sample}.yaml"
    output:
        yamlOutFix_hsap="/home/devel/alafzi/10X_cellRanger/SERRANO/zUMI/YAMLs_fixed/"+protocol+"_hsap_{sample}_fixed.yaml"
    shell:
        """
       sed 's/make_stats: true/make_stats: yes/g' {input.yamlin_hsap} > {output.yamlOutFix_hsap}

       """
       

rule zUMI_run:
    input:
        yaml_hsap="/home/devel/alafzi/10X_cellRanger/SERRANO/zUMI/YAMLs_fixed/"+protocol+"_hsap_{sample}_fixed.yaml"

    output:
        dir='CNAG10X_zUMI/{sample}_human/'+protocol+'.filtered.tagged.Aligned.out.bam',
        dir_file11='CNAG10X_zUMI/{sample}_human/zUMIs_output/'+protocol+'kept_barcodes.txt',
        dir_file111='CNAG10X_zUMI/{sample}_human/zUMIs_output/expression/'+protocol+'.dgecounts.rds',
        dir_file1111='CNAG10X_zUMI/{sample}_human/zUMIs_output/stats/'+protocol+'.genecounts.txt',
        dir_file11111='CNAG10X_zUMI/{sample}_human/zUMIs_output/stats/'+protocol+'.UMIcounts.txt',
        dir_file111111='CNAG10X_zUMI/{sample}_human/zUMIs_output/stats/'+protocol+'.bc.READcounts.rds',        

    shell:
        """
        cd CNAG10X_zUMI/{wildcards.sample}_human
        bash {zUMI_path}/zUMIs-master.sh -y ../../{input.yaml_hsap}

       """



