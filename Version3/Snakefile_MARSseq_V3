from os import listdir
import yaml

#Path to sample fastq files
fastq_path = '/project/devel/HCA/CNAG/MARSseq'
human_gtf = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
human_STAR_genome= '/project/devel/alafzi/ref_genomes/human/STARgenome'
mouse_gtf = '/project/devel/alafzi/ref_genomes/mouse/mmu_gencode.vM17.primary_assembly.annotation.gtf'
mouse_STAR_genome= '/project/devel/alafzi/ref_genomes/mouse/STARgenome'
mixed_gtf = '/project/devel/alafzi/ref_genomes/mixed/hsap_mmus_can_combined_gtf.gtf'
mixed_STAR_genome= '/project/devel/alafzi/ref_genomes/mixed/STARgenome'

zUMI_path='/apps/ZUMIS/0.0.6'
bc_list2= '/scratch/devel/alafzi/HCA_04/bc_list2'
protocol= 'MARSseq'

#Loading modules
#shell.executable("!/usr/bin/env bash")
shell.prefix("module unload gcc/latest; module load gcc/6.3.0; module load XZ/5.2.2; module load CONDA/4.3.11_PYTHON3; module load java/latest; module load SAMTOOLS/1.6; module load BAMTOOLS/2.3.0 ; module load STAR/2.6.0c; module load R/3.5.0; module load hdf5/1.10.1; module load PIGZ/2.3.3; module load ZUMIS/0.0.6; ")

#Samples
sample_files = listdir(fastq_path)
SAMPLES = list(set(i.split("_")[0] for i in sample_files))
#SAMPLES = ["5568AA", "5571AA"]
SPECIES = ["human", "mouse", "mixed"]

rule all:
    input:
        expand(protocol + "_{sample}.yaml", sample=SAMPLES)


rule create_yaml:
    input:
        source.yaml.file = "MARSseq.yaml"
    output:
        output.yaml = protocol + "_{sample}.yaml"
    run:
        fname = "some.yaml"

        stream = open(fname, 'r')
        data = yaml.load(stream)

        data['project'] = protocol
        data['sequence_files']['file1']['name'] = fastq_path+'/{sample}_2.fq.gz'
        data['sequence_files']['file1']['base_definitio'][0] = 1-6
        data['sequence_files']['file1']['base_definitio'][1] = 7-14

        data['sequence_files']['file2']['name'] = fastq_path+'/{sample}_1.fq.gz'
        data['sequence_files']['file1']['base_definitio'][0] = 1-52

        with open(fname, 'w') as yaml_file:
        output.yaml.write( yaml.dump(data, default_flow_style=False))
