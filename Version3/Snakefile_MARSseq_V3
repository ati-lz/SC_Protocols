from os import listdir
import yaml

#Path to sample fastq files
fastq_path = '/project/devel/HCA/CNAG/MARSseq/'
human_gtf = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
human_STAR_genome= '/project/devel/alafzi/ref_genomes/human/STARgenome'
mouse_gtf = '/project/devel/alafzi/ref_genomes/mouse/mmu_gencode.vM17.primary_assembly.annotation.gtf'
mouse_STAR_genome= '/project/devel/alafzi/ref_genomes/mouse/STARgenome'
mixed_gtf = '/project/devel/alafzi/ref_genomes/mixed/hsap_mmus_can_combined_gtf.gtf'
mixed_STAR_genome= '/project/devel/alafzi/ref_genomes/mixed/STARgenome'

zUMI_path='/apps/ZUMIS/0.0.6'
bc_list2= '/scratch/devel/alafzi/HCA_04/bc_list2'
protocol= 'MARSseq'

#Loading modules
#shell.executable("!/usr/bin/env bash")
shell.prefix("module unload gcc/latest; module load gcc/6.3.0; module load XZ/5.2.2; module load CONDA/4.3.11_PYTHON3; module load java/latest; module load SAMTOOLS/1.6; module load BAMTOOLS/2.3.0 ; module load STAR/2.6.0c; module load R/3.5.0; module load hdf5/1.10.1; module load PIGZ/2.3.3; module load ZUMIS/0.0.6; ")

#Samples
sample_files = listdir(fastq_path)
SAMPLES = list(set(i.split("_")[0] for i in sample_files))
SAMPLES = ["5568AA", "5571AA"]
SPECIES = ["human", "mouse", "mixed"]

rule all:
    input:
        expand(protocol + "hsap_{sample}.yaml", sample=SAMPLES),
        expand(protocol + "mmus_{sample}.yaml", sample=SAMPLES),
        expand(protocol + "mixed_{sample}.yaml", sample=SAMPLES)


rule create_yaml:
    input:
        yaml= "pipeline_general.yaml"
    output:
        yamlOut_hsap=protocol + "hsap_{sample}.yaml",
        yamlOut_mmus=protocol + "mmus_{sample}.yaml",
        yamlOut_mixed=protocol + "mixed_{sample}.yaml"
    run:
        #fname = input

        stream = open(input.yaml, 'r')
        data_hsap = yaml.load(stream)

        data_hsap['project'] = protocol
        data_hsap['sequence_files']['file1']['name'] = fastq_path+ wildcards.sample +'_2.fq.gz'
        data_hsap['sequence_files']['file1']['base_definition'][0] = 'BC(1-6)'
        data_hsap['sequence_files']['file1']['base_definition'][1] = 'UMI(7-14)'
        data_hsap['sequence_files']['file2']['name'] = fastq_path+ wildcards.sample +'_1.fq.gz'
        data_hsap['sequence_files']['file2']['base_definition'][0] = 'cDNA(1-52)'
        data_hsap['reference']['STAR_index'] = '/project/devel/alafzi/ref_genomes/human/STARgenome'
        data_hsap['reference']['GTF_file'] = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
        data_hsap['reference']['additional_STAR_params'] = '--limitOutSJcollapsed 4000000 --limitSjdbInsertNsj 4000000'
        data_hsap['out_dir'] = "."
        with open(output.yamlOut_hsap, 'w') as out_hsap:
            out_hsap.write( yaml.dump(data_hsap, default_flow_style=False))
        data_mmus = data_hsap
        data_mmus['reference']['STAR_index'] = '/project/devel/alafzi/ref_genomes/mouse/STARgenome'
        data_mmus['reference']['GTF_file'] = '/project/devel/alafzi/ref_genomes/mouse/mmu_gencode.vM17.primary_assembly.annotation.gtf'
        with open(output.yamlOut_mmus, 'w') as out_mmus:
            out_mmus.write( yaml.dump(data_mmus, default_flow_style=False))
        data_mixed = data_hsap
        data_mixed['reference']['STAR_index'] = '/project/devel/alafzi/ref_genomes/mixed/STARgenome'
        data_mixed['reference']['GTF_file'] = '/project/devel/alafzi/ref_genomes/mixed/hsap_mmus_can_combined_gtf.gtf'
        with open(output.yamlOut_mixed, 'w') as out_mixed:
            out_mixed.write( yaml.dump(data_mixed, default_flow_style=False))
        file.close(output.yamlOut_hsap)
        file.close(output.yamlOut_mmus)
        file.close(output.yamlOut_mixed)