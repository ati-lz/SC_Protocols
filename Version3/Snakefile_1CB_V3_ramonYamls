from os import listdir
import yaml

#Path to sample fastq files
fastq_path = '/project/devel/HCA/MDC_Berlin/1CellBio/re-demux/PXXX/demux2/FASTQ/'
#fastq_path = '/project/devel/HCA/MDC_Berlin/1CellBio/re-demux/1CellBio_redemux_merged/'
human_gtf = '/project/devel/alafzi/ref_genomes/human/hsa_gencode.v28.annotation.gtf'
human_STAR_genome= '/project/devel/alafzi/ref_genomes/human/STARgenome'
mouse_gtf = '/project/devel/alafzi/ref_genomes/mouse/mmu_gencode.vM17.primary_assembly.annotation.gtf'
mouse_STAR_genome= '/project/devel/alafzi/ref_genomes/mouse/STARgenome'
mixed_gtf = '/project/devel/alafzi/ref_genomes/mixed/hsap_mmus_can_combined_gtf.gtf'
mixed_STAR_genome= '/project/devel/alafzi/ref_genomes/mixed/STARgenome'

zUMI_path='/apps/ZUMIS/2.2'
bc_list2= '/project/devel/HCA/10XGenomics/10X_cellBCs_737K-august-2016.txt'
protocol= '1CB'

#Loading modules
#shell.executable("!/usr/bin/env bash")
shell.prefix("module unload gcc/latest; module load gcc/6.3.0; module load XZ/5.2.2; module load COREUTILS/8.21; module load CONDA/4.3.11_PYTHON3; module load java/latest; module load SAMTOOLS/1.6; module load BAMTOOLS/2.3.0 ; module load STAR/2.6.0c; module load R/3.5.0; module load hdf5/1.10.1; module load PIGZ/2.3.3; module load ZUMIS/2.2; ")

#Samples
sample_files = listdir(fastq_path)
SAMPLES = list(set(i.split("_")[2] for i in sample_files))
#SPECIES = ["human", "mouse", "mixed"]


rule all:
    input:
        "multigenome_1CB_V3/"+protocol+".hsap.full.SCE.Robj",
        "multigenome_1CB_V3/"+protocol+".mmus.full.SCE.Robj"

       
rule zUMI_run:
    input:
        yaml_hsap="1CB_specific_yamls/"+protocol+"_hsap_{sample}_ramon.yaml",
        yaml_mmus="1CB_specific_yamls/"+protocol + "_mmus_{sample}_ramon.yaml",
        yaml_mixed="1CB_specific_yamls/"+protocol + "_mixed_{sample}_ramon.yaml"

    output:
        dir='multigenome_1CB_V3/{sample}_human/'+protocol+'.filtered.tagged.Aligned.out.bam',
        dir_file11='multigenome_1CB_V3/{sample}_human/zUMIs_output/'+protocol+'kept_barcodes.txt',
        dir_file111='multigenome_1CB_V3/{sample}_human/zUMIs_output/expression/'+protocol+'.dgecounts.rds',
        dir_file1111='multigenome_1CB_V3/{sample}_human/zUMIs_output/stats/'+protocol+'.genecounts.txt',
        dir_file11111='multigenome_1CB_V3/{sample}_human/zUMIs_output/stats/'+protocol+'.UMIcounts.txt',
        dir_file111111='multigenome_1CB_V3/{sample}_human/zUMIs_output/stats/'+protocol+'.bc.READcounts.rds',
        dir2='multigenome_1CB_V3/{sample}_mouse/'+protocol+'.filtered.tagged.Aligned.out.bam',
        dir_file22='multigenome_1CB_V3/{sample}_mouse/zUMIs_output/'+protocol+'kept_barcodes.txt',
        dir_file222='multigenome_1CB_V3/{sample}_mouse/zUMIs_output/expression/'+protocol+'.dgecounts.rds',
        dir_file2222='multigenome_1CB_V3/{sample}_mouse/zUMIs_output/stats/'+protocol+'.genecounts.txt',
        dir_file22222='multigenome_1CB_V3/{sample}_mouse/zUMIs_output/stats/'+protocol+'.UMIcounts.txt',
        dir_file222222='multigenome_1CB_V3/{sample}_mouse/zUMIs_output/stats/'+protocol+'.bc.READcounts.rds',
        dir3='multigenome_1CB_V3/{sample}_mixed/'+protocol+'.filtered.tagged.Aligned.out.bam',
        dir_file33='multigenome_1CB_V3/{sample}_mixed/zUMIs_output/'+protocol+'kept_barcodes.txt',
        dir_file333='multigenome_1CB_V3/{sample}_mixed/zUMIs_output/expression/'+protocol+'.dgecounts.rds'
        

    shell:
        """
        cd multigenome_1CB_V3/{wildcards.sample}_human
        bash {zUMI_path}/zUMIs-master.sh -y ../../{input.yaml_hsap}
        cd ../{wildcards.sample}_mouse
        bash {zUMI_path}/zUMIs-master.sh -y ../../{input.yaml_mmus}
        cd ../{wildcards.sample}_mixed
        bash {zUMI_path}/zUMIs-master.sh -y ../../{input.yaml_mixed}
        cd ../..
       """



rule Big_Bam_to_SAM:
    input: 
        'multigenome_1CB_V3/{sample}_mixed/'+protocol+'.filtered.tagged.Aligned.out.bam'
    output: 
        'multigenome_1CB_V3/{sample}_mixed/'+protocol+'.demuxready.sam'
    shell:
        """
        samtools view -h {input} > {output}
        """

# Here im getting the cell barcodes from readspercell.txt in zUMI_output/stats (It may be redundant I can combine it later)
rule cellBC_detected:
    input:
        reads_per_cell= 'multigenome_1CB_V3/{sample}_mixed/zUMIs_output/'+protocol+'kept_barcodes.txt'
    output:
        'multigenome_1CB_V3/{sample}_mixed/cell_barcodes.txt'
    shell:
        """
        sed '1d' {input.reads_per_cell} | cut -d ',' -f1 > {output}
        """
rule demux_cells:
    input:
        tagged_sam= 'multigenome_1CB_V3/{sample}_mixed/'+protocol+'.demuxready.sam',
        detected_BC= 'multigenome_1CB_V3/{sample}_mixed/cell_barcodes.txt'
    output:
        demux_dir= 'multigenome_1CB_V3/{sample}_mixed/demuxed_cells_sam'
    shell:
         """
         mkdir {output.demux_dir}
         python SAM_cellBC_demultiplexing_V2.py {input.tagged_sam} {input.detected_BC} {protocol} {wildcards.sample} {output.demux_dir}
         """

rule doublet_species:
    input:
        demux_dir= 'multigenome_1CB_V3/{sample}_mixed/demuxed_cells_sam'
    output:
        out1= 'multigenome_1CB_V3/{sample}_mixed/doublet_species/doublet_table.txt',
        out2= 'multigenome_1CB_V3/{sample}_mixed/doublet_species/doublet_table_reads.txt',
        out3= 'multigenome_1CB_V3/{sample}_mixed/doublet_species/Only_human_cell_IDs.txt',
        out4= 'multigenome_1CB_V3/{sample}_mixed/doublet_species/Only_mouse_cell_IDs.txt',
        out5= 'multigenome_1CB_V3/{sample}_mixed/doublet_species/Only_dog_cell_IDs.txt',
        out6= 'multigenome_1CB_V3/{sample}_mixed/doublet_species/Only_human_cell_IDs_BAMs.txt'

    shell:
        """
        python doublet_rate_V2.py {input.demux_dir} {output.out1} {output.out2} {output.out3} {output.out4} {output.out5} {output.out6}

        """

rule prepare_R_inputs:
    input:
        hsap_Exprs= expand('multigenome_1CB_V3/{sample}_human/zUMIs_output/expression/'+protocol+'.dgecounts.rds',sample=SAMPLES),
        mmus_Exprs= expand('multigenome_1CB_V3/{sample}_mouse/zUMIs_output/expression/'+protocol+'.dgecounts.rds',sample=SAMPLES),
        hsap_n_Reads= expand('multigenome_1CB_V3/{sample}_human/zUMIs_output/'+protocol+'kept_barcodes.txt',sample=SAMPLES),
        hsap_n_Genes= expand('multigenome_1CB_V3/{sample}_human/zUMIs_output/stats/'+protocol+'.genecounts.txt',sample=SAMPLES),
        hsap_n_UMIs= expand('multigenome_1CB_V3/{sample}_human/zUMIs_output/stats/'+protocol+'.UMIcounts.txt',sample=SAMPLES),
        hsap_n_Features= expand('multigenome_1CB_V3/{sample}_human/zUMIs_output/stats/'+protocol+'.bc.READcounts.rds',sample=SAMPLES),
        mmus_n_Reads= expand('multigenome_1CB_V3/{sample}_mouse/zUMIs_output/'+protocol+'kept_barcodes.txt',sample=SAMPLES),
        mmus_n_Genes= expand('multigenome_1CB_V3/{sample}_mouse/zUMIs_output/stats/'+protocol+'.genecounts.txt',sample=SAMPLES),
        mmus_n_UMIs= expand('multigenome_1CB_V3/{sample}_mouse/zUMIs_output/stats/'+protocol+'.UMIcounts.txt',sample=SAMPLES),
        mmus_n_Features= expand('multigenome_1CB_V3/{sample}_mouse/zUMIs_output/stats/'+protocol+'.bc.READcounts.rds',sample=SAMPLES),
        species_info= expand('multigenome_1CB_V3/{sample}_mixed/doublet_species/doublet_table_reads.txt',sample=SAMPLES)
        #VCF_file= expand('multigenome_1CB_V3/mpileup/{sample}.mpileup.full.vcf.gz',sample=SAMPLES)
    
    output:
        hsapExp_list="multigenome_1CB_V3/"+protocol+'_Hsap_expression_list.txt',
        mmusExp_list="multigenome_1CB_V3/"+protocol+'_Mmus_expression_list.txt',
        hsap_nReads_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfReads_list.txt',
        hsap_nUMIs_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfUMIs_list.txt',
        hsap_nGenes_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfGenes_list.txt',
        hsap_nFeatures_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfFeatures_list.txt',
        mmus_nReads_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfReads_list.txt',
        mmus_nUMIs_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfUMIs_list.txt',
        mmus_nGenes_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfGenes_list.txt',
        mmus_nFeatures_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfFeatures_list.txt',
        species_list="multigenome_1CB_V3/"+protocol+'_Species_info_list.txt'
        #vcfs_list="multigenome_1CB_V3/"+protocol+'_VCFs_list.txt'

    shell:
        """
        echo -e "{input.hsap_Exprs}" >> {output.hsapExp_list}
        echo -e "{input.mmus_Exprs}" >> {output.mmusExp_list}
        echo -e "{input.hsap_n_Reads}" >> {output.hsap_nReads_list}
        echo -e "{input.hsap_n_Genes}" >> {output.hsap_nGenes_list}
        echo -e "{input.hsap_n_UMIs}" >> {output.hsap_nUMIs_list}
        echo -e "{input.hsap_n_Features}" >> {output.hsap_nFeatures_list}
        echo -e "{input.mmus_n_Reads}" >> {output.mmus_nReads_list}
        echo -e "{input.mmus_n_Genes}" >> {output.mmus_nGenes_list}
        echo -e "{input.mmus_n_UMIs}" >> {output.mmus_nUMIs_list}
        echo -e "{input.mmus_n_Features}" >> {output.mmus_nFeatures_list}
        echo -e "{input.species_info}" >> {output.species_list}
        """
rule R_wrapper:
    input:
        hE_list="multigenome_1CB_V3/"+protocol+'_Hsap_expression_list.txt',
        mE_list="multigenome_1CB_V3/"+protocol+'_Mmus_expression_list.txt',
        h_nR_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfReads_list.txt',
        h_nU_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfUMIs_list.txt',
        h_nG_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfGenes_list.txt',
        h_nF_list="multigenome_1CB_V3/"+protocol+'_Hsap_NumberOfFeatures_list.txt',
        m_nR_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfReads_list.txt',
        m_nU_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfUMIs_list.txt',
        m_nG_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfGenes_list.txt',
        m_nF_list="multigenome_1CB_V3/"+protocol+'_Mmus_NumberOfFeatures_list.txt',
        spec_list="multigenome_1CB_V3/"+protocol+'_Species_info_list.txt'
        #vcf_list="multigenome_1CB_V3/"+protocol+'_VCFs_list.txt'
    output:
        hsap_Robj= "multigenome_1CB_V3/"+protocol+".hsap.full.SCE.Robj",
        mmus_Robj= "multigenome_1CB_V3/"+protocol+".mmus.full.SCE.Robj"
    shell:
        "Rscript wrapper_Robj_V4_withoutDonor.R --hsapExp {input.hE_list} --mmusExp {input.mE_list} --hnReads {input.h_nR_list} --hnUMI {input.h_nU_list} --hnGene {input.h_nG_list} --hnFeatures {input.h_nF_list} --mnReads {input.m_nR_list} --mnUMI {input.m_nU_list} --mnGene {input.m_nG_list} --mnFeatures {input.m_nF_list} --species {input.spec_list} --output_SCEobj ./multigenome_1CB_V3 --technology 1CB"